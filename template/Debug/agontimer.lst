Zilog eZ80 Macro Assembler Version 4.3 (19073001) RELISTED31-May-23     21:30:40     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Zilog eZ80 ANSI C Compiler Release 3.4
                           A     2    ; -nomodsect -optsize -noreduceopt -nopadbranch
                           A     3    ; -peephole -globalopt -localcse -const=ROM 
                           A     4    	FILE	"..\agontimer.c"
                           A     5    	.assume ADL=1
                           A     6    .DEBUG "C"
                           A     7    	SEGMENT CODE
                           A     8    .BEGREC "NONAME0",8
                           A     9    .DEFINE "baudRate"
                           A    10    .VALUE 0
                           A    11    .CLASS 8
                           A    12    .TYPE 4
                           A    13    .ENDEF
                           A    14    .DEFINE "dataBits"
                           A    15    .VALUE 3
                           A    16    .CLASS 8
                           A    17    .TYPE 12
                           A    18    .ENDEF
                           A    19    .DEFINE "stopBits"
                           A    20    .VALUE 4
                           A    21    .CLASS 8
                           A    22    .TYPE 12
                           A    23    .ENDEF
                           A    24    .DEFINE "parity"
                           A    25    .VALUE 5
                           A    26    .CLASS 8
                           A    27    .TYPE 12
                           A    28    .ENDEF
                           A    29    .DEFINE "flowcontrol"
                           A    30    .VALUE 6
                           A    31    .CLASS 8
                           A    32    .TYPE 12
                           A    33    .ENDEF
                           A    34    .DEFINE "eir"
                           A    35    .VALUE 7
                           A    36    .CLASS 8
                           A    37    .TYPE 12
                           A    38    .ENDEF
                           A    39    .ENDREC "NONAME0"
                           A    40    .BEGREC "NONAME1",15
                           A    41    .DEFINE "fs"
                           A    42    .VALUE 0
                           A    43    .CLASS 8
                           A    44    .TYPE 46
                           A    45    .ENDEF
                           A    46    .DEFINE "id"
                           A    47    .VALUE 3
                           A    48    .CLASS 8
                           A    49    .TYPE 13
                           A    50    .ENDEF
                           A    51    .DEFINE "attr"
                           A    52    .VALUE 5
                           A    53    .CLASS 8
                           A    54    .TYPE 12
                           A    55    .ENDEF
                           A    56    .DEFINE "stat"
                           A    57    .VALUE 6
                           A    58    .CLASS 8
                           A    59    .TYPE 12
                           A    60    .ENDEF
                           A    61    .DEFINE "sclust"
                           A    62    .VALUE 7
                           A    63    .CLASS 8
                           A    64    .TYPE 15
                           A    65    .ENDEF
                           A    66    .DEFINE "objsize"
                           A    67    .VALUE 11
                           A    68    .CLASS 8
                           A    69    .TYPE 15
                           A    70    .ENDEF
                           A    71    .ENDREC "NONAME1"
                           A    72    .BEGREC "NONAME2",36
                           A    73    .DEFINE "obj"
                           A    74    .VALUE 0
                           A    75    .CLASS 8
                           A    76    .TAG "NONAME1"
                           A    77    .TYPE 8
                           A    78    .ENDEF
                           A    79    .DEFINE "flag"
                           A    80    .VALUE 15
                           A    81    .CLASS 8
                           A    82    .TYPE 12
                           A    83    .ENDEF
                           A    84    .DEFINE "err"
                           A    85    .VALUE 16
                           A    86    .CLASS 8
                           A    87    .TYPE 12
                           A    88    .ENDEF
                           A    89    .DEFINE "fptr"
                           A    90    .VALUE 17
                           A    91    .CLASS 8
                           A    92    .TYPE 15
                           A    93    .ENDEF
                           A    94    .DEFINE "clust"
                           A    95    .VALUE 21
                           A    96    .CLASS 8
                           A    97    .TYPE 15
                           A    98    .ENDEF
                           A    99    .DEFINE "sect"
                           A   100    .VALUE 25
                           A   101    .CLASS 8
                           A   102    .TYPE 15
                           A   103    .ENDEF
                           A   104    .DEFINE "dir_sect"
                           A   105    .VALUE 29
                           A   106    .CLASS 8
                           A   107    .TYPE 15
                           A   108    .ENDEF
                           A   109    .DEFINE "dir_ptr"
                           A   110    .VALUE 33
                           A   111    .CLASS 8
                           A   112    .TYPE 46
                           A   113    .ENDEF
                           A   114    .ENDREC "NONAME2"
                           A   115    	SEGMENT BSS
04152F                     A   116    __timer0_prevhandler:
04152F                     A   117    	DS	3
                           A   118    .DEFINE "_timer0_prevhandler"
                           A   119    .ALIAS "__timer0_prevhandler"
                           A   120    .CLASS 83
                           A   121    .VALUE __timer0_prevhandler
                           A   122    .TYPE 33
                           A   123    .ENDEF
                           A   124    ;    1	/*
                           A   125    ;    2	 * Title:			AGON timer interfac
                           A   126    ;    3	 * Author:			Jeroen Venema
                           A   127    ;    4	 * Created:			06/11/2022
                           A   128    ;    5	 * Last Updated:	22/01/2023
                           A   129    ;    6	 * 
                           A   130    ;    7	 * Modinfo:
                           A   131    ;    8	 * 06/11/2022:		Initial version
                           A   132    ;    9	 * 22/01/2023:		Interrupt-based fre
                           A   133    ;   10	 * 10/04/2023:		Using mos_setintvec
                           A   134    ;   11	 */
                           A   135    ;   12	
                           A   136    ;   13	#include <defines.h>
                           A   137    ;   14	#include <ez80.h>
                           A   138    ;   15	#include "agontimer.h"
                           A   139    ;   16	#include "mos-interface.h"
                           A   140    ;   17	
                           A   141    ;   18	#define TMR0_COUNTER_1ms	(unsigned s
                           A   142    ;   19	
                           A   143    ;   20	void *_timer0_prevhandler;				
                           A   144    	SEGMENT CODE
                           A   145    ;   21	
                           A   146    ;   22	// start timer0 on a millisecond interv
                           A   147    ;   23	// this function registers an interrupt
                           A   148    ;   24	void timer0_begin(int interval)
                           A   149    ;   25	{
04113E                     A   150    _timer0_begin:
                           A   151    .DEFINE "_timer0_begin"
                           A   152    
                           A   153    .VALUE _timer0_begin
                           A   154    
                           A   155    .CLASS 2
                           A   156    
                           A   157    .TYPE 65
                           A   158    
                           A   159    .ENDEF
                           A   160    
                           A   161    .BEGFUNC "timer0_begin",25,"_timer0_begin"
                           A   162    
                           A   163    .LINE 25
                           A   164    
                           A   165    .DEFINE "interval"
                           A   166    
                           A   167    .CLASS 65
                           A   168    
                           A   169    .VALUE 6
                           A   170    
                           A   171    .TYPE 4
                           A   172    
                           A   173    .ENDEF
                           A   174    
                           A   175    .DEFINE "rr"
                           A   176    
                           A   177    .CLASS 65
                           A   178    
                           A   179    .VALUE -2
                           A   180    
                           A   181    .TYPE 13
                           A   182    
                           A   183    .ENDEF
                           A   184    
                           A   185    .DEFINE "tmp"
                           A   186    
                           A   187    .CLASS 65
                           A   188    
                           A   189    .VALUE -3
                           A   190    
                           A   191    .TYPE 12
                           A   192    
                           A   193    .ENDEF
                           A   194    
04113E DDE5                A   195    	PUSH	IX
041140 DD210000 00         A   196    	LD	IX,0
041145 DD39                A   197    	ADD	IX,SP
041147 C5                  A   198    	PUSH	BC
                           A   199    ;   26		unsigned char tmp;
                           A   200    ;   27		unsigned short rr;
                           A   201    ;   28		
                           A   202    ;   29		_timer0_prevhandler = mos_setintvec
                           A   203    .LINE 29
                           A   204    
041148 01 37 12 04         A   205    	LD	BC,_timer0_handler
04114C C5                  A   206    	PUSH	BC
04114D 010A0000            A   207    	LD	BC,10
041151 C5                  A   208    	PUSH	BC
041152 CD 72 10 04         A   209    	CALL	_mos_setintvector
041156 C1                  A   210    	POP	BC
041157 C1                  A   211    	POP	BC
041158 22 2F 15 04         A   212    	LD	(__timer0_prevhandler),HL
                           A   213    ;   30	
                           A   214    ;   31		timer0 = 0;
                           A   215    .LINE 31
                           A   216    
04115C 01000000            A   217    	LD	BC,0
041160 ED43 E7 14 04       A   218    	LD	(_timer0),BC
                           A   219    ;   32		TMR0_CTL = 0x00;
                           A   220    .LINE 32
                           A   221    
041165 AF                  A   222    	XOR	A,A
041166 ED3980              A   223    	OUT0	(128),A
                           A   224    ;   33		rr = (unsigned short)(((18432000 / 
                           A   225    .LINE 33
                           A   226    
041169 DD0706              A   227    	LD	BC,(IX+%6)
04116C CD 2D 14 04         A   228    	CALL	__itol
041170 5F                  A   229    	LD	E,A
041171 C5E1                A   230    	LD	HL,BC
041173 01004800            A   231    	LD	BC,18432
041177 AF                  A   232    	XOR	A,A
041178 CD 4A 14 04         A   233    	CALL	__lmuls
04117C 01100000            A   234    	LD	BC,16
041180 AF                  A   235    	XOR	A,A
041181 CD EC 12 04         A   236    	CALL	__ldivs
041185 DD75FE              A   237    	LD	(IX+%FFFFFFFE),L
041188 DD74FF              A   238    	LD	(IX+%FFFFFFFF),H
                           A   239    ;   34		TMR0_RR_H = (unsigned char)(rr >> 8
                           A   240    .LINE 34
                           A   241    
04118B DD07FE              A   242    	LD	BC,(IX+%FFFFFFFE)
04118E CD 9E 12 04         A   243    	CALL	__stoiu
041192 3E08                A   244    	LD	A,%8
041194 CD 5E 12 04         A   245    	CALL	__ishrs_b
041198 7D                  A   246    	LD	A,L
041199 ED3982              A   247    	OUT0	(130),A
                           A   248    ;   35		TMR0_RR_L = (unsigned char)(rr);
                           A   249    .LINE 35
                           A   250    
04119C DD7EFE              A   251    	LD	A,(IX+%FFFFFFFE)
04119F ED3981              A   252    	OUT0	(129),A
                           A   253    ;   36		tmp = TMR0_CTL;
                           A   254    .LINE 36
                           A   255    
0411A2 ED3880              A   256    	IN0	A,(128)
0411A5 DD77FD              A   257    	LD	(IX+%FFFFFFFD),A
                           A   258    ;   37	    TMR0_CTL = 0x57;
                           A   259    .LINE 37
                           A   260    
0411A8 3E57                A   261    	LD	A,%57
0411AA ED3980              A   262    	OUT0	(128),A
                           A   263    ;   38	}
                           A   264    .LINE 38
                           A   265    
0411AD DDF9                A   266    	LD	SP,IX
0411AF DDE1                A   267    	POP	IX
0411B1 C9                  A   268    	RET	
                           A   269    
                           A   270    
                           A   271    ;**************************** _timer0_begin ***
                           A   272    ;Name                         Addr/Register   S
                           A   273    ;_timer0                             IMPORT    
                           A   274    ;__timer0_prevhandler                STATIC    
                           A   275    ;_timer0_handler                     IMPORT  --
                           A   276    ;_mos_setintvector                   IMPORT  --
                           A   277    ;tmp                                   IX-3    
                           A   278    ;rr                                    IX-2    
                           A   279    ;interval                              IX+6    
                           A   280    
                           A   281    
                           A   282    ; Stack Frame Size: 12 (bytes)
                           A   283    ;       Spill Code: 0 (instruction)
                           A   284    
                           A   285    
                           A   286    .ENDFUNC "timer0_begin",38,"_timer0_begin"
                           A   287    ;   39	
                           A   288    ;   40	void timer0_end(void)
                           A   289    ;   41	{
0411B2                     A   290    _timer0_end:
                           A   291    .DEFINE "_timer0_end"
                           A   292    
                           A   293    .VALUE _timer0_end
                           A   294    
                           A   295    .CLASS 2
                           A   296    
                           A   297    .TYPE 65
                           A   298    
                           A   299    .ENDEF
                           A   300    
                           A   301    .BEGFUNC "timer0_end",41,"_timer0_end"
                           A   302    
0411B2 DDE5                A   303    	PUSH	IX
0411B4 DD210000 00         A   304    	LD	IX,0
0411B9 DD39                A   305    	ADD	IX,SP
                           A   306    ;   42		TMR0_CTL = 0;
                           A   307    .LINE 42
                           A   308    
0411BB AF                  A   309    	XOR	A,A
0411BC ED3980              A   310    	OUT0	(128),A
                           A   311    ;   43		mos_setintvector(PRT0_IVECT, _timer
                           A   312    .LINE 43
                           A   313    
0411BF ED4B 2F 15 04       A   314    	LD	BC,(__timer0_prevhandler)
0411C4 C5                  A   315    	PUSH	BC
0411C5 010A0000            A   316    	LD	BC,10
0411C9 C5                  A   317    	PUSH	BC
0411CA CD 72 10 04         A   318    	CALL	_mos_setintvector
0411CE C1                  A   319    	POP	BC
0411CF C1                  A   320    	POP	BC
                           A   321    ;   44	}
                           A   322    .LINE 44
                           A   323    
0411D0 DDF9                A   324    	LD	SP,IX
0411D2 DDE1                A   325    	POP	IX
0411D4 C9                  A   326    	RET	
                           A   327    
                           A   328    
                           A   329    ;**************************** _timer0_end *****
                           A   330    ;Name                         Addr/Register   S
                           A   331    ;__timer0_prevhandler                STATIC    
                           A   332    ;_mos_setintvector                   IMPORT  --
                           A   333    
                           A   334    
                           A   335    ; Stack Frame Size: 6 (bytes)
                           A   336    ;       Spill Code: 0 (instruction)
                           A   337    
                           A   338    
                           A   339    .ENDFUNC "timer0_end",44,"_timer0_end"
                           A   340    ;   45	
                           A   341    ;   46	// delay for number of ms using TMR0
                           A   342    ;   47	// this routine doesn't use the interru
                           A   343    ;   48	void delayms(int ms)
                           A   344    ;   49	{
0411D5                     A   345    _delayms:
                           A   346    .DEFINE "_delayms"
                           A   347    
                           A   348    .VALUE _delayms
                           A   349    
                           A   350    .CLASS 2
                           A   351    
                           A   352    .TYPE 65
                           A   353    
                           A   354    .ENDEF
                           A   355    
                           A   356    .BEGFUNC "delayms",49,"_delayms"
                           A   357    
                           A   358    .LINE 49
                           A   359    
                           A   360    .DEFINE "ms"
                           A   361    
                           A   362    .CLASS 65
                           A   363    
                           A   364    .VALUE 6
                           A   365    
                           A   366    .TYPE 4
                           A   367    
                           A   368    .ENDEF
                           A   369    
                           A   370    .DEFINE "timer0"
                           A   371    
                           A   372    .CLASS 65
                           A   373    
                           A   374    .VALUE -2
                           A   375    
                           A   376    .TYPE 13
                           A   377    
                           A   378    .ENDEF
                           A   379    
0411D5 DDE5                A   380    	PUSH	IX
0411D7 DD210000 00         A   381    	LD	IX,0
0411DC DD39                A   382    	ADD	IX,SP
0411DE 3B                  A   383    	DEC	SP
0411DF 3B                  A   384    	DEC	SP
                           A   385    ;   50		unsigned short rr;
                           A   386    ;   51		UINT16 timer0;
                           A   387    ;   52	
                           A   388    ;   53		rr = TMR0_COUNTER_1ms - 19;	// 1,7%
                           A   389    ;   54		
                           A   390    ;   55		TMR0_CTL = 0x00;	// disable time
                           A   391    .LINE 55
                           A   392    
0411E0 AF                  A   393    	XOR	A,A
0411E1 ED3980              A   394    	OUT0	(128),A
                           A   395    ;   56		
                           A   396    ;   57		while(ms)
                           A   397    .LINE 57
                           A   398    
0411E4 18 43               A   399    	JR	L_6
0411E6                     A   400    L_7:
                           A   401    ;   58		{	
                           A   402    ;   59			TMR0_RR_H = (unsigned char)(rr 
                           A   403    .LINE 59
                           A   404    
0411E6 3E04                A   405    	LD	A,%4
0411E8 ED3982              A   406    	OUT0	(130),A
                           A   407    ;   60			TMR0_RR_L = (unsigned char)(rr)
                           A   408    .LINE 60
                           A   409    
0411EB 3E6D                A   410    	LD	A,%6D
0411ED ED3981              A   411    	OUT0	(129),A
                           A   412    ;   61					
                           A   413    ;   62			TMR0_CTL = 0x87; // enable, sin
                           A   414    .LINE 62
                           A   415    
0411F0 3E87                A   416    	LD	A,%87
0411F2 ED3980              A   417    	OUT0	(128),A
                           A   418    ;   63			do
0411F5                     A   419    L_2:
                           A   420    .LINE 63
                           A   421    
                           A   422    ;   64			{
                           A   423    ;   65				timer0 = TMR0_DR_L;
                           A   424    .LINE 65
                           A   425    
0411F5 ED3881              A   426    	IN0	A,(129)
0411F8 4F                  A   427    	LD	C,A
0411F9 0600                A   428    	LD	B,%0
0411FB C5E1                A   429    	LD	HL,BC
0411FD DD75FE              A   430    	LD	(IX+%FFFFFFFE),L
041200 DD74FF              A   431    	LD	(IX+%FFFFFFFF),H
                           A   432    ;   66				timer0 = timer0 | (TMR0_DR_
                           A   433    .LINE 66
                           A   434    
041203 ED3882              A   435    	IN0	A,(130)
041206 4F                  A   436    	LD	C,A
041207 C5E1                A   437    	LD	HL,BC
041209 65                  A   438    	LD	H,L
04120A 2E00                A   439    	LD	L,%0
04120C DD07FE              A   440    	LD	BC,(IX+%FFFFFFFE)
04120F CD 41 14 04         A   441    	CALL	__sor
041213 DD75FE              A   442    	LD	(IX+%FFFFFFFE),L
041216 DD74FF              A   443    	LD	(IX+%FFFFFFFF),H
                           A   444    ;   67			}
                           A   445    ;   68			while(timer0);
                           A   446    .LINE 68
                           A   447    
041219 DD27FE              A   448    	LD	HL,(IX+%FFFFFFFE)
04121C CD 34 14 04         A   449    	CALL	__scmpzero
041220 20 D3               A   450    	JR	NZ,L_2
                           A   451    ;   69			ms--;
                           A   452    .LINE 69
                           A   453    
041222 DD0706              A   454    	LD	BC,(IX+%6)
041225 0B                  A   455    	DEC	BC
041226 DD0F06              A   456    	LD	(IX+%6),BC
                           A   457    ;   70		}
041229                     A   458    L_6:
                           A   459    .LINE 70
                           A   460    
041229 DD2706              A   461    	LD	HL,(IX+%6)
04122C CD 80 13 04         A   462    	CALL	__icmpzero
041230 20 B4               A   463    	JR	NZ,L_7
                           A   464    .LINE 71
                           A   465    
041232 DDF9                A   466    	LD	SP,IX
041234 DDE1                A   467    	POP	IX
041236 C9                  A   468    	RET	
                           A   469    
                           A   470    
                           A   471    ;**************************** _delayms ********
                           A   472    ;Name                         Addr/Register   S
                           A   473    ;timer0                                IX-2    
                           A   474    ;ms                                    IX+6    
                           A   475    
                           A   476    
                           A   477    ; Stack Frame Size: 11 (bytes)
                           A   478    ;       Spill Code: 0 (instruction)
                           A   479    
                           A   480    
                           A   481    .ENDFUNC "delayms",71,"_delayms"
                           A   482    	XREF _mos_setintvector:ROM
                           A   483    	XREF _timer0_handler:ROM
                           A   484    	XREF _timer0:ROM
                           A   485    	XREF __ldivs:ROM
                           A   486    	XREF __lmuls:ROM
                           A   487    	XREF __sor:ROM
                           A   488    	XREF __stoiu:ROM
                           A   489    	XREF __itol:ROM
                           A   490    	XREF __scmpzero:ROM
                           A   491    	XREF __icmpzero:ROM
                           A   492    	XREF __ishrs_b:ROM
                           A   493    	XDEF _delayms
                           A   494    	XDEF _timer0_end
                           A   495    	XDEF _timer0_begin
                           A   496    	XDEF __timer0_prevhandler
                           A   497    	END


Errors: 0
Warnings: 0
Lines Assembled: 498
