; Zilog eZ80 ANSI C Compiler Release 3.4
; -nomodsect -optsize -noreduceopt -nopadbranch -debug
; -peephole -globalopt -localcse -const=ROM 
	FILE	"..\main.c"
	.assume ADL=1
.DEBUG "C"
	SEGMENT CODE
.BEGREC "fmt_type",19
.DEFINE "status"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "flags"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "size"
.VALUE 2
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "chr"
.VALUE 3
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "type"
.VALUE 4
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "field_width"
.VALUE 5
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "precision"
.VALUE 6
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "set_begin"
.VALUE 7
.CLASS 8
.TYPE 34
.ENDEF
.DEFINE "set_end"
.VALUE 10
.CLASS 8
.TYPE 34
.ENDEF
.DEFINE "pad_whole"
.VALUE 13
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_pre_fract"
.VALUE 14
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_post_fract"
.VALUE 15
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_at"
.VALUE 16
.CLASS 8
.TYPE 34
.ENDEF
.ENDREC "fmt_type"
.BEGREC "flt_info",12
.DEFINE "flags"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "exp"
.VALUE 1
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "digits"
.VALUE 2
.CLASS 8
.DIM 10
.TYPE 108
.ENDEF
.ENDREC "flt_info"
.BEGREC "NONAME0",6
.DEFINE "quot"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "rem"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.ENDREC "NONAME0"
.BEGREC "NONAME1",8
.DEFINE "quot"
.VALUE 0
.CLASS 8
.TYPE 5
.ENDEF
.DEFINE "rem"
.VALUE 4
.CLASS 8
.TYPE 5
.ENDEF
.ENDREC "NONAME1"
.BEGREC "header",6
.DEFINE "s"
.VALUE 0
.CLASS 11
.TAG "NONAME2"
.TYPE 8
.ENDEF
.DEFINE "x"
.VALUE 0
.CLASS 11
.TYPE 2
.ENDEF
.ENDREC "header"
.BEGREC "NONAME2",6
.DEFINE "ptr"
.VALUE 0
.CLASS 8
.TAG "header"
.TYPE 40
.ENDEF
.DEFINE "size"
.VALUE 3
.CLASS 8
.TYPE 14
.ENDEF
.ENDREC "NONAME2"
;    1	#include <stdio.h>
;    2	#include <Stdlib.h>
;    3	#include <ctype.h>
;    4	#include "mos-interface.h"
;    5	#include "vdp.h"
;    6	#include "mos-keycode.h"
;    7	#include "agontimer.h"
;    8	#include "Math.h"
;    9	
;   10	
;   11	void plot(char color, UINT16 Lx, UINT16 Ly ) {
_plot:
.DEFINE "_plot"

.VALUE _plot

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "plot",11,"_plot"

.LINE 11

.DEFINE "color"

.CLASS 65

.VALUE 6

.TYPE 2

.ENDEF

.DEFINE "Lx"

.CLASS 65

.VALUE 9

.TYPE 13

.ENDEF

.DEFINE "Ly"

.CLASS 65

.VALUE 12

.TYPE 13

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;   12		vdp_fgcolour(color, color, color);
.LINE 12

	LD	C,(IX+%6)
	LD	B,%0
	PUSH	BC
	LD	C,(IX+%6)
	PUSH	BC
	LD	C,(IX+%6)
	PUSH	BC
	CALL	_vdp_fgcolour
	POP	BC
	POP	BC
	POP	BC
;   13		vdp_plot(4,Lx,Ly);
.LINE 13

	LD	BC,(IX+%C)
	CALL	__stoiu
	PUSH	HL
	LD	BC,(IX+%9)
	CALL	__stoiu
	PUSH	HL
	LD	BC,4
	PUSH	BC
	CALL	_vdp_plot
	POP	BC
	POP	BC
	POP	BC
;   14		vdp_plot(5,Lx,Ly);
.LINE 14

	LD	BC,(IX+%C)
	CALL	__stoiu
	PUSH	HL
	LD	BC,(IX+%9)
	CALL	__stoiu
	PUSH	HL
	LD	BC,5
	PUSH	BC
	CALL	_vdp_plot
	POP	BC
	POP	BC
	POP	BC
;   15		}
.LINE 15

	LD	SP,IX
	POP	IX
	RET	


;**************************** _plot ***************************
;Name                         Addr/Register   Size   Type
;_vdp_plot                           IMPORT  -----   function
;_vdp_fgcolour                       IMPORT  -----   function
;Ly                                   IX+12      2   parameter
;Lx                                    IX+9      2   parameter
;color                                 IX+6      1   parameter


; Stack Frame Size: 15 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "plot",15,"_plot"
;   16		
;   17	int main(int argc, char * argv[]) {
_main:
.DEFINE "_main"

.VALUE _main

.CLASS 2

.TYPE 68

.ENDEF

.BEGFUNC "main",17,"_main"

.LINE 17

.DEFINE "argc"

.CLASS 65

.VALUE 6

.TYPE 4

.ENDEF

.DEFINE "argv"

.CLASS 65

.VALUE 9

.TYPE 290

.ENDEF

.DEFINE "i"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

.DEFINE "x1"

.CLASS 65

.VALUE -8

.TYPE 13

.ENDEF

.DEFINE "y1"

.CLASS 65

.VALUE -10

.TYPE 13

.ENDEF

.DEFINE "running"

.CLASS 65

.VALUE -14

.TYPE 12

.ENDEF

.DEFINE "cy"

.CLASS 65

.VALUE -17

.TYPE 4

.ENDEF

.DEFINE "cx"

.CLASS 65

.VALUE -20

.TYPE 4

.ENDEF

.DEFINE "cz"

.CLASS 65

.VALUE -32

.TYPE 4

.ENDEF

.DEFINE "key"

.CLASS 65

.VALUE -34

.TYPE 13

.ENDEF

.DEFINE "starY"

.CLASS 65

.VALUE -421

.DIM 128

.TYPE 100

.ENDEF

.DEFINE "starZ"

.CLASS 65

.VALUE -805

.DIM 128

.TYPE 100

.ENDEF

.DEFINE "starX"

.CLASS 65

.VALUE -1189

.DIM 128

.TYPE 100

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LD	HL,-1304
	ADD	HL,SP
	LD	SP,HL
;   18		UINT16 key;
;   19		UINT16 x,y,moveclock =0, animationclock=0, movestate=0, timer2;
;   20		UINT16 x1,y1;
;   21		UINT8 frame,r,g,b,filehandle;
;   22		UINT8 xpos,ypos;
;   23		int i,j;
;   24		char c;
;   25		BOOL running;
;   26		char myString[];
;   27		int starX[128];
;   28		int starY[128];
;   29		int starZ[128];
;   30		int starRange = 2500;
;   31		int maxd = 150;
;   32		int cx,cy,cz;
;   33		int maxX=640;
;   34		int maxY=480;
;   35		float cosT = 0.9848;
;   36		float sinT = 0.1736;
;   37		float rx, ry;
;   38	
;   39		for(i=0;i<128;i++)	{
.LINE 39

	LD	BC,0
	LD	(IX+%FFFFFFFD),BC
	JR	L_4
L_2:
;   40			starX[i]=starRange-2*(rand()%starRange);
.LINE 40

	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	(IY),A
	POP	BC
	POP	IY
	CALL	_rand
	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	A,(IY)
	POP	BC
	POP	IY
	LD	BC,2500
	CALL	__irems
	ADD	HL,HL
	LD	BC,HL
	LD	HL,(IX+%FFFFFFFD)
	LD	DE,HL
	ADD	HL,HL
	ADD	HL,DE
	LD	DE,HL
	LD	HL,IX
	PUSH	BC
	PUSH	HL
	LD	HL,DE
	LD	BC,-1300	; spill
	CALL	__istix
	POP	HL
	POP	BC
	LD	DE,-1189
	PUSH	BC
	PUSH	HL
	LD	HL,DE	; unspill
	LD	BC,-1303	; spill
	CALL	__istix
	POP	HL
	LD	BC,-1300	; unspill
	PUSH	HL
	CALL	__ildix
	LD	BC,-1300	; spill
	CALL	__istix
	POP	HL
	LD	BC,-1303	; unspill
	PUSH	HL
	CALL	__ildix
	LD	DE,HL
	POP	HL
	POP	BC
	ADD	HL,DE
	PUSH	BC
	LD	BC,-1300	; unspill
	PUSH	HL
	CALL	__ildix
	LD	DE,HL
	POP	HL
	POP	BC
	ADD	HL,DE
	LD	IY,HL
	LD	HL,2500
	OR	A,A
	SBC	HL,BC
	LD	(IY),HL
;   41			starY[i]=starRange-2*(rand()%starRange);
.LINE 41

	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	(IY),A
	POP	BC
	POP	IY
	CALL	_rand
	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	A,(IY)
	POP	BC
	POP	IY
	LD	BC,2500
	CALL	__irems
	ADD	HL,HL
	LD	BC,HL
	LD	HL,(IX+%FFFFFFFD)
	LD	DE,HL
	ADD	HL,HL
	ADD	HL,DE
	LD	DE,HL
	LD	HL,IX
	PUSH	BC
	PUSH	HL
	LD	HL,DE
	LD	BC,-1294	; spill
	CALL	__istix
	POP	HL
	POP	BC
	LD	DE,-421
	PUSH	BC
	PUSH	HL
	LD	HL,DE	; unspill
	LD	BC,-1297	; spill
	CALL	__istix
	POP	HL
	LD	BC,-1294	; unspill
	PUSH	HL
	CALL	__ildix
	LD	BC,-1294	; spill
	CALL	__istix
	POP	HL
	LD	BC,-1297	; unspill
	PUSH	HL
	CALL	__ildix
	LD	DE,HL
	POP	HL
	POP	BC
	ADD	HL,DE
	PUSH	BC
	LD	BC,-1294	; unspill
	PUSH	HL
	CALL	__ildix
	LD	DE,HL
	POP	HL
	POP	BC
	ADD	HL,DE
	LD	IY,HL
	LD	HL,2500
	OR	A,A
	SBC	HL,BC
	LD	(IY),HL
;   42			starZ[i]=rand()%maxd;
.LINE 42

	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	(IY),A
	POP	BC
	POP	IY
	CALL	_rand
	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	A,(IY)
	POP	BC
	POP	IY
	LD	BC,150
	CALL	__irems
	LD	BC,HL
	LD	HL,(IX+%FFFFFFFD)
	LD	DE,HL
	ADD	HL,HL
	ADD	HL,DE
	LD	DE,HL
	LD	HL,IX
	PUSH	BC
	PUSH	HL
	LD	HL,DE
	LD	BC,-1288	; spill
	CALL	__istix
	POP	HL
	POP	BC
	LD	DE,-805
	PUSH	BC
	PUSH	HL
	LD	HL,DE	; unspill
	LD	BC,-1291	; spill
	CALL	__istix
	POP	HL
	LD	BC,-1288	; unspill
	PUSH	HL
	CALL	__ildix
	LD	BC,-1288	; spill
	CALL	__istix
	POP	HL
	LD	BC,-1291	; unspill
	PUSH	HL
	CALL	__ildix
	LD	DE,HL
	POP	HL
	POP	BC
	ADD	HL,DE
	PUSH	BC
	LD	BC,-1288	; unspill
	PUSH	HL
	CALL	__ildix
	LD	DE,HL
	POP	HL
	POP	BC
	ADD	HL,DE
	LD	(HL),BC
	LD	BC,(IX+%FFFFFFFD)
	INC	BC
	LD	(IX+%FFFFFFFD),BC
;   43			}
L_4:
.LINE 43

	LD	BC,128
	LD	HL,(IX+%FFFFFFFD)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_2
;   44		rx = starX[i]*cosT-starY[i]*sinT;
.LINE 44

;   45		ry = starY[i]*cosT+starY[i]*sinT;	
;   46	
;   47			x1=150;
.LINE 47

	LD	(IX+%FFFFFFF8),%96
	LD	(IX+%FFFFFFF9),%0
;   48		y1=150;
.LINE 48

	LD	(IX+%FFFFFFF6),%96
	LD	(IX+%FFFFFFF7),%0
;   49		vdp_mode(0);
.LINE 49

	LD	BC,0
	PUSH	BC
	CALL	_vdp_mode
	POP	BC
;   50		vdp_cls();
.LINE 50

	CALL	_vdp_cls
;   51		vdp_fgcolour(255,255,255);
.LINE 51

	LD	BC,255
	PUSH	BC
	PUSH	BC
	PUSH	BC
	CALL	_vdp_fgcolour
	POP	BC
	POP	BC
	POP	BC
;   52		
;   53		
;   54		running=TRUE;
.LINE 54

	LD	(IX+%FFFFFFF2),%1
;   55		while(running)
.LINE 55

	JR	L_54
L_55:
;   56		{
;   57			key = getfullkeycode();
.LINE 57

	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	(IY),A
	POP	BC
	POP	IY
	CALL	_getfullkeycode
	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	A,(IY)
	POP	BC
	POP	IY
	LD	(IX+%FFFFFFDE),L
	LD	(IX+%FFFFFFDF),H
;   58			
;   59			for(i=0;i<128;i++)	{
.LINE 59

	LD	BC,0
	LD	(IX+%FFFFFFFD),BC
	JR	L_10
L_8:
;   60				starZ[i]=starZ[i]-1;
.LINE 60

	LD	HL,(IX+%FFFFFFFD)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	(IX+%FFFFFFF3),HL
	LD	BC,HL
	LD	HL,IX
	LD	DE,-805
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,-1192
	CALL	__istix
	LD	BC,-1192
	CALL	__ildix
	LD	IY,HL
	LD	BC,-1192
	CALL	__ildix
	LD	BC,(IY)
	DEC	BC
	LD	(HL),BC
;   61				if(starZ[i]<=0) {
.LINE 61

	LD	BC,-1192
	CALL	__ildix
	LD	BC,(HL)
	OR	A,A
	SBC	HL,HL
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_9
;   62					starZ[i]=maxd;
.LINE 62

	LD	BC,(IX+%FFFFFFF3)
	LD	HL,IX
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,150
	LD	(HL),BC
;   63					starX[i]=starRange-2*(rand()%starRange);
.LINE 63

	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	(IY),A
	POP	BC
	POP	IY
	CALL	_rand
	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	A,(IY)
	POP	BC
	POP	IY
	LD	BC,2500
	CALL	__irems
	ADD	HL,HL
	LD	BC,HL
	LD	HL,IX
	PUSH	BC
	PUSH	HL
	LD	HL,(IX+%FFFFFFF3)
	LD	BC,-1258	; spill
	CALL	__istix
	POP	HL
	POP	BC
	LD	DE,-1189
	PUSH	BC
	PUSH	HL
	LD	HL,DE	; unspill
	LD	BC,-1261	; spill
	CALL	__istix
	POP	HL
	LD	BC,-1258	; unspill
	PUSH	HL
	CALL	__ildix
	LD	BC,-1258	; spill
	CALL	__istix
	POP	HL
	LD	BC,-1261	; unspill
	PUSH	HL
	CALL	__ildix
	LD	DE,HL
	POP	HL
	POP	BC
	ADD	HL,DE
	PUSH	BC
	LD	BC,-1258	; unspill
	PUSH	HL
	CALL	__ildix
	LD	DE,HL
	POP	HL
	POP	BC
	ADD	HL,DE
	LD	IY,HL
	LD	HL,2500
	OR	A,A
	SBC	HL,BC
	LD	(IY),HL
;   64					starY[i]=starRange-2*(rand()%starRange);
.LINE 64

	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	(IY),A
	POP	BC
	POP	IY
	CALL	_rand
	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	A,(IY)
	POP	BC
	POP	IY
	LD	BC,2500
	CALL	__irems
	ADD	HL,HL
	LD	BC,HL
	LD	HL,IX
	PUSH	BC
	PUSH	HL
	LD	HL,(IX+%FFFFFFF3)
	LD	BC,-1252	; spill
	CALL	__istix
	POP	HL
	POP	BC
	LD	DE,-421
	PUSH	BC
	PUSH	HL
	LD	HL,DE	; unspill
	LD	BC,-1255	; spill
	CALL	__istix
	POP	HL
	LD	BC,-1252	; unspill
	PUSH	HL
	CALL	__ildix
	LD	BC,-1252	; spill
	CALL	__istix
	POP	HL
	LD	BC,-1255	; unspill
	PUSH	HL
	CALL	__ildix
	LD	DE,HL
	POP	HL
	POP	BC
	ADD	HL,DE
	PUSH	BC
	LD	BC,-1252	; unspill
	PUSH	HL
	CALL	__ildix
	LD	DE,HL
	POP	HL
	POP	BC
	ADD	HL,DE
	LD	IY,HL
	LD	HL,2500
	OR	A,A
	SBC	HL,BC
	LD	(IY),HL
;   65					starZ[i]=rand()%maxd;
.LINE 65

	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	(IY),A
	POP	BC
	POP	IY
	CALL	_rand
	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	A,(IY)
	POP	BC
	POP	IY
	LD	BC,150
	CALL	__irems
	LD	BC,HL
	LD	HL,IX
	PUSH	BC
	PUSH	HL
	LD	HL,(IX+%FFFFFFF3)
	LD	BC,-1246	; spill
	CALL	__istix
	POP	HL
	POP	BC
	LD	DE,-805
	PUSH	BC
	PUSH	HL
	LD	HL,DE	; unspill
	LD	BC,-1249	; spill
	CALL	__istix
	POP	HL
	LD	BC,-1246	; unspill
	PUSH	HL
	CALL	__ildix
	LD	BC,-1246	; spill
	CALL	__istix
	POP	HL
	LD	BC,-1249	; unspill
	PUSH	HL
	CALL	__ildix
	LD	DE,HL
	POP	HL
	POP	BC
	ADD	HL,DE
	PUSH	BC
	LD	BC,-1246	; unspill
	PUSH	HL
	CALL	__ildix
	LD	DE,HL
	POP	HL
	POP	BC
	ADD	HL,DE
	LD	(HL),BC
;   66					}		
;   67				}
L_9:
.LINE 67

	LD	BC,(IX+%FFFFFFFD)
	INC	BC
	LD	(IX+%FFFFFFFD),BC
L_10:
	LD	BC,128
	LD	HL,(IX+%FFFFFFFD)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_8
;   68			vdp_cls();
.LINE 68

	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	(IY),A
	POP	BC
	POP	IY
	CALL	_vdp_cls
	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	A,(IY)
	POP	BC
	POP	IY
;   69			for(i=0;i<128;i++)	{
.LINE 69

	LD	BC,0
	LD	(IX+%FFFFFFFD),BC
	JR	L_21
L_19:
;   70				cz = starZ[i];
.LINE 70

	LD	HL,(IX+%FFFFFFFD)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	(IX+%FFFFFFFA),HL
	LD	(IX+%FFFFFFE3),HL
	LD	(IX+%FFFFFFE6),HL
	LD	(IX+%FFFFFFE9),HL
	LD	(IX+%FFFFFFDB),HL
	LD	BC,HL
	LD	HL,IX
	LD	DE,-805
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(HL)
	LD	(IX+%FFFFFFE0),BC
;   71				cx = starX[i]/cz;
.LINE 71

	LD	DE,(IX+%FFFFFFFA)
	LD	HL,IX
	PUSH	HL
	LD	HL,BC
	LD	BC,-1240	; spill
	CALL	__istix
	POP	HL
	LD	BC,-1189
	PUSH	HL
	LD	HL,BC	; unspill
	LD	BC,-1243	; spill
	CALL	__istix
	POP	HL
	LD	BC,-1240	; unspill
	PUSH	HL
	CALL	__ildix
	LD	BC,-1240	; spill
	CALL	__istix
	POP	HL
	LD	BC,-1243	; unspill
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	ADD	HL,BC
	LD	BC,-1240	; unspill
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	ADD	HL,DE
	LD	HL,(HL)
	CALL	__idivs
	LD	(IX+%FFFFFFEC),HL
;   72				cy = starY[i]/cz;
.LINE 72

	LD	BC,(IX+%FFFFFFFA)
	LD	HL,IX
	LD	DE,-421
	ADD	HL,DE
	ADD	HL,BC
	LD	HL,(HL)
	LD	BC,(IX+%FFFFFFE0)
	CALL	__idivs
	LD	(IX+%FFFFFFEF),HL
;   73				
;   74				if((cx<-320) || (cx>320)) {
.LINE 74

	LD	BC,16776896
	LD	HL,(IX+%FFFFFFEC)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_14
	LD	BC,(IX+%FFFFFFEC)
	LD	HL,320
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_17
L_14:
;   75					starZ[i]=maxd;
.LINE 75

	LD	BC,(IX+%FFFFFFFA)
	LD	HL,IX
	LD	DE,-805
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,150
	LD	(HL),BC
;   76					starX[i]=starRange-2*(rand()%starRange);
.LINE 76

	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	(IY),A
	POP	BC
	POP	IY
	CALL	_rand
	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	A,(IY)
	POP	BC
	POP	IY
	LD	BC,2500
	CALL	__irems
	ADD	HL,HL
	LD	BC,HL
	LD	HL,IX
	PUSH	BC
	PUSH	HL
	LD	HL,(IX+%FFFFFFFA)
	LD	BC,-1234	; spill
	CALL	__istix
	POP	HL
	POP	BC
	LD	DE,-1189
	PUSH	BC
	PUSH	HL
	LD	HL,DE	; unspill
	LD	BC,-1237	; spill
	CALL	__istix
	POP	HL
	LD	BC,-1234	; unspill
	PUSH	HL
	CALL	__ildix
	LD	BC,-1234	; spill
	CALL	__istix
	POP	HL
	LD	BC,-1237	; unspill
	PUSH	HL
	CALL	__ildix
	LD	DE,HL
	POP	HL
	POP	BC
	ADD	HL,DE
	PUSH	BC
	LD	BC,-1234	; unspill
	PUSH	HL
	CALL	__ildix
	LD	DE,HL
	POP	HL
	POP	BC
	ADD	HL,DE
	LD	IY,HL
	LD	HL,2500
	OR	A,A
	SBC	HL,BC
	LD	(IY),HL
;   77					starY[i]=starRange-2*(rand()%starRange);
.LINE 77

	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	(IY),A
	POP	BC
	POP	IY
	CALL	_rand
	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	A,(IY)
	POP	BC
	POP	IY
	LD	BC,2500
	CALL	__irems
	ADD	HL,HL
	LD	BC,HL
	LD	HL,IX
	PUSH	BC
	PUSH	HL
	LD	HL,(IX+%FFFFFFFA)
	LD	BC,-1228	; spill
	CALL	__istix
	POP	HL
	POP	BC
	LD	DE,-421
	PUSH	BC
	PUSH	HL
	LD	HL,DE	; unspill
	LD	BC,-1231	; spill
	CALL	__istix
	POP	HL
	LD	BC,-1228	; unspill
	PUSH	HL
	CALL	__ildix
	LD	BC,-1228	; spill
	CALL	__istix
	POP	HL
	LD	BC,-1231	; unspill
	PUSH	HL
	CALL	__ildix
	LD	DE,HL
	POP	HL
	POP	BC
	ADD	HL,DE
	PUSH	BC
	LD	BC,-1228	; unspill
	PUSH	HL
	CALL	__ildix
	LD	DE,HL
	POP	HL
	POP	BC
	ADD	HL,DE
	LD	IY,HL
	LD	HL,2500
	OR	A,A
	SBC	HL,BC
	LD	(IY),HL
;   78					starZ[i]=rand()%maxd;
.LINE 78

	LD	BC,(IX+%FFFFFFFA)
	LD	(IX+%FFFFFFE3),BC
	LD	BC,(IX+%FFFFFFFA)
	LD	(IX+%FFFFFFE6),BC
	LD	BC,(IX+%FFFFFFFA)
	LD	(IX+%FFFFFFE9),BC
	LD	BC,(IX+%FFFFFFFA)
	LD	(IX+%FFFFFFDB),BC
	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	(IY),A
	POP	BC
	POP	IY
	CALL	_rand
	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	A,(IY)
	POP	BC
	POP	IY
	LD	BC,150
	CALL	__irems
	LD	BC,HL
	LD	HL,IX
	PUSH	BC
	PUSH	HL
	LD	HL,(IX+%FFFFFFFA)
	LD	BC,-1222	; spill
	CALL	__istix
	POP	HL
	POP	BC
	LD	DE,-805
	PUSH	BC
	PUSH	HL
	LD	HL,DE	; unspill
	LD	BC,-1225	; spill
	CALL	__istix
	POP	HL
	LD	BC,-1222	; unspill
	PUSH	HL
	CALL	__ildix
	LD	BC,-1222	; spill
	CALL	__istix
	POP	HL
	LD	BC,-1225	; unspill
	PUSH	HL
	CALL	__ildix
	LD	DE,HL
	POP	HL
	POP	BC
	ADD	HL,DE
	PUSH	BC
	LD	BC,-1222	; unspill
	PUSH	HL
	CALL	__ildix
	LD	DE,HL
	POP	HL
	POP	BC
	ADD	HL,DE
	LD	(HL),BC
;   79					}
L_17:
.LINE 79

;   80				if((cy<-240) || (cy>240)) {
.LINE 80

	LD	BC,16776976
	LD	HL,(IX+%FFFFFFEF)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_16
	LD	BC,(IX+%FFFFFFEF)
	LD	HL,240
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	P,L_18
L_16:
;   81					starZ[i]=maxd;
.LINE 81

	LD	BC,(IX+%FFFFFFE3)
	LD	HL,IX
	LD	DE,-805
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,150
	LD	(HL),BC
;   82					starX[i]=starRange-2*(rand()%starRange);
.LINE 82

	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	(IY),A
	POP	BC
	POP	IY
	CALL	_rand
	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	A,(IY)
	POP	BC
	POP	IY
	LD	BC,2500
	CALL	__irems
	ADD	HL,HL
	LD	BC,HL
	LD	HL,IX
	PUSH	BC
	PUSH	HL
	LD	HL,(IX+%FFFFFFE6)
	LD	BC,-1216	; spill
	CALL	__istix
	POP	HL
	POP	BC
	LD	DE,-1189
	PUSH	BC
	PUSH	HL
	LD	HL,DE	; unspill
	LD	BC,-1219	; spill
	CALL	__istix
	POP	HL
	LD	BC,-1216	; unspill
	PUSH	HL
	CALL	__ildix
	LD	BC,-1216	; spill
	CALL	__istix
	POP	HL
	LD	BC,-1219	; unspill
	PUSH	HL
	CALL	__ildix
	LD	DE,HL
	POP	HL
	POP	BC
	ADD	HL,DE
	PUSH	BC
	LD	BC,-1216	; unspill
	PUSH	HL
	CALL	__ildix
	LD	DE,HL
	POP	HL
	POP	BC
	ADD	HL,DE
	LD	IY,HL
	LD	HL,2500
	OR	A,A
	SBC	HL,BC
	LD	(IY),HL
;   83					starY[i]=starRange-2*(rand()%starRange);
.LINE 83

	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	(IY),A
	POP	BC
	POP	IY
	CALL	_rand
	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	A,(IY)
	POP	BC
	POP	IY
	LD	BC,2500
	CALL	__irems
	ADD	HL,HL
	LD	BC,HL
	LD	HL,IX
	PUSH	BC
	PUSH	HL
	LD	HL,(IX+%FFFFFFE9)
	LD	BC,-1210	; spill
	CALL	__istix
	POP	HL
	POP	BC
	LD	DE,-421
	PUSH	BC
	PUSH	HL
	LD	HL,DE	; unspill
	LD	BC,-1213	; spill
	CALL	__istix
	POP	HL
	LD	BC,-1210	; unspill
	PUSH	HL
	CALL	__ildix
	LD	BC,-1210	; spill
	CALL	__istix
	POP	HL
	LD	BC,-1213	; unspill
	PUSH	HL
	CALL	__ildix
	LD	DE,HL
	POP	HL
	POP	BC
	ADD	HL,DE
	PUSH	BC
	LD	BC,-1210	; unspill
	PUSH	HL
	CALL	__ildix
	LD	DE,HL
	POP	HL
	POP	BC
	ADD	HL,DE
	LD	IY,HL
	LD	HL,2500
	OR	A,A
	SBC	HL,BC
	LD	(IY),HL
;   84					starZ[i]=rand()%maxd;
.LINE 84

	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	(IY),A
	POP	BC
	POP	IY
	CALL	_rand
	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	A,(IY)
	POP	BC
	POP	IY
	LD	BC,150
	CALL	__irems
	LD	BC,HL
	LD	HL,IX
	PUSH	BC
	PUSH	HL
	LD	HL,(IX+%FFFFFFDB)
	LD	BC,-1204	; spill
	CALL	__istix
	POP	HL
	POP	BC
	LD	DE,-805
	PUSH	BC
	PUSH	HL
	LD	HL,DE	; unspill
	LD	BC,-1207	; spill
	CALL	__istix
	POP	HL
	LD	BC,-1204	; unspill
	PUSH	HL
	CALL	__ildix
	LD	BC,-1204	; spill
	CALL	__istix
	POP	HL
	LD	BC,-1207	; unspill
	PUSH	HL
	CALL	__ildix
	LD	DE,HL
	POP	HL
	POP	BC
	ADD	HL,DE
	PUSH	BC
	LD	BC,-1204	; unspill
	PUSH	HL
	CALL	__ildix
	LD	DE,HL
	POP	HL
	POP	BC
	ADD	HL,DE
	LD	(HL),BC
;   85					}	
L_18:
.LINE 85

;   86				plot(255,320+cx,240+cy);
.LINE 86

	LD	HL,(IX+%FFFFFFEF)
	LD.LIS	DE,240
	ADD.SIS	HL,DE
	PUSH	HL
	LD	HL,(IX+%FFFFFFEC)
	LD.LIS	DE,320
	ADD.SIS	HL,DE
	PUSH	HL
	LD	BC,16777215
	PUSH	BC
	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	(IY),A
	POP	BC
	POP	IY
	CALL	_plot
	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	A,(IY)
	POP	BC
	POP	IY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,(IX+%FFFFFFFD)
	INC	BC
	LD	(IX+%FFFFFFFD),BC
;   87			}
L_21:
.LINE 87

	LD	BC,128
	LD	HL,(IX+%FFFFFFFD)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_19
;   88			
;   89					
;   90			
;   91			switch( (key&0xFF))
.LINE 91

	LD	BC,(IX+%FFFFFFDE)
	CALL	__stoiu
	LD	A,L
	UEXT	HL
	LD	L,A
	CALL	__case8D
	JP	(HL)
L__9:
	DW	6
	DB	8
	DW24	L_36	

	DB	10
	DW24	L_22	

	DB	11
	DW24	L_29	

	DB	21
	DW24	L_43	

	DB	27
	DW24	L_51	

	DB	32
	DW24	L_50	

	DW24	L_54	

;   92				{
;   93					case 0x0a:
L_22:
.LINE 93

;   94							//puts("DOWN");
;   95							y1++;
.LINE 95

	LD	HL,(IX+%FFFFFFF6)
	INC	HL
	LD	(IX+%FFFFFFF6),L
	LD	(IX+%FFFFFFF7),H
;   96							plot(255,x1,y1);
.LINE 96

	LD	BC,(IX+%FFFFFFF6)
	PUSH	BC
	LD	BC,(IX+%FFFFFFF8)
	PUSH	BC
	LD	BC,16777215
	PUSH	BC
	CALL	_plot
	POP	BC
	POP	BC
	POP	BC
;   97							for(i=0;i<128;i++)	{
.LINE 97

	LD	BC,0
	LD	(IX+%FFFFFFFD),BC
	JR	L_27
L_25:
;   98								starY[i]=starY[i]-200;
.LINE 98

	LD	HL,(IX+%FFFFFFFD)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	HL,IX
	LD	DE,-421
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,-1195
	CALL	__istix
	LD	BC,-1195
	CALL	__ildix
	LD	IY,HL
	LD	BC,-1195
	CALL	__ildix
	PUSH	HL
	LD	HL,IY
	LD	BC,-1282	; spill
	CALL	__istix
	POP	HL
	LD	IY,HL
	LD	HL,IY	; unspill
	LD	BC,-1285	; spill
	CALL	__istix
	LD	BC,-1282	; unspill
	CALL	__ildix
	LD	IY,HL
	LD	BC,16777016
	LD	HL,(IY)
	ADD	HL,BC
	LD	BC,-1285	; unspill
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	LD	(IY),HL
	LD	BC,(IX+%FFFFFFFD)
	INC	BC
	LD	(IX+%FFFFFFFD),BC
;   99								}		
L_27:
.LINE 99

	LD	BC,128
	LD	HL,(IX+%FFFFFFFD)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_25
;  100							break;
.LINE 100

	JR	L_54
;  101					case 0x0b:
L_29:
.LINE 101

;  102							//puts("UP");
;  103							y1--;
.LINE 103

	LD	IY,(IX+%FFFFFFF6)
	LEA	HL,IY+%FFFFFFFF
	LD	(IX+%FFFFFFF6),L
	LD	(IX+%FFFFFFF7),H
;  104							plot(255,x1,y1);
.LINE 104

	LD	BC,(IX+%FFFFFFF6)
	PUSH	BC
	LD	BC,(IX+%FFFFFFF8)
	PUSH	BC
	LD	BC,16777215
	PUSH	BC
	CALL	_plot
	POP	BC
	POP	BC
	POP	BC
;  105							for(i=0;i<128;i++)	{
.LINE 105

	LD	BC,0
	LD	(IX+%FFFFFFFD),BC
	JR	L_34
L_32:
;  106								starY[i]=starY[i]+200;
.LINE 106

	LD	HL,(IX+%FFFFFFFD)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	HL,IX
	LD	DE,-421
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,-1198
	CALL	__istix
	LD	BC,-1198
	CALL	__ildix
	LD	IY,HL
	LD	BC,-1198
	CALL	__ildix
	PUSH	HL
	LD	HL,IY
	LD	BC,-1276	; spill
	CALL	__istix
	POP	HL
	LD	IY,HL
	LD	HL,IY	; unspill
	LD	BC,-1279	; spill
	CALL	__istix
	LD	BC,-1276	; unspill
	CALL	__ildix
	LD	IY,HL
	LD	BC,200
	LD	HL,(IY)
	ADD	HL,BC
	LD	BC,-1279	; unspill
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	LD	(IY),HL
	LD	BC,(IX+%FFFFFFFD)
	INC	BC
	LD	(IX+%FFFFFFFD),BC
;  107								}		
L_34:
.LINE 107

	LD	BC,128
	LD	HL,(IX+%FFFFFFFD)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_32
;  108							break;
.LINE 108

	JR	L_54
;  109					case 0x08:
L_36:
.LINE 109

;  110							//puts("LEFT");
;  111							x1--;
.LINE 111

	LD	IY,(IX+%FFFFFFF8)
	LEA	HL,IY+%FFFFFFFF
	LD	(IX+%FFFFFFF8),L
	LD	(IX+%FFFFFFF9),H
;  112							plot(255,x1,y1);
.LINE 112

	LD	BC,(IX+%FFFFFFF6)
	PUSH	BC
	LD	BC,(IX+%FFFFFFF8)
	PUSH	BC
	LD	BC,16777215
	PUSH	BC
	CALL	_plot
	POP	BC
	POP	BC
	POP	BC
;  113							for(i=0;i<128;i++)	{
.LINE 113

	LD	BC,0
	LD	(IX+%FFFFFFFD),BC
	JR	L_41
L_39:
;  114								starX[i]=starX[i]-200;
.LINE 114

	LD	HL,(IX+%FFFFFFFD)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,HL
	LD	HL,IX
	LD	DE,-1189
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,-1201
	CALL	__istix
	LD	BC,-1201
	CALL	__ildix
	LD	IY,HL
	LD	BC,-1201
	CALL	__ildix
	PUSH	HL
	LD	HL,IY
	LD	BC,-1270	; spill
	CALL	__istix
	POP	HL
	LD	IY,HL
	LD	HL,IY	; unspill
	LD	BC,-1273	; spill
	CALL	__istix
	LD	BC,-1270	; unspill
	CALL	__ildix
	LD	IY,HL
	LD	BC,16777016
	LD	HL,(IY)
	ADD	HL,BC
	LD	BC,-1273	; unspill
	PUSH	HL
	CALL	__ildix
	LD	IY,HL
	POP	HL
	LD	(IY),HL
	LD	BC,(IX+%FFFFFFFD)
	INC	BC
	LD	(IX+%FFFFFFFD),BC
;  115								}		
L_41:
.LINE 115

	LD	BC,128
	LD	HL,(IX+%FFFFFFFD)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_39
;  116							break;
.LINE 116

	JR	L_54
;  117					case 0x15:
L_43:
.LINE 117

;  118							//puts("RIGHT");
;  119							x1++;
.LINE 119

	LD	HL,(IX+%FFFFFFF8)
	INC	HL
	LD	(IX+%FFFFFFF8),L
	LD	(IX+%FFFFFFF9),H
;  120							plot(255,x1,y1);
.LINE 120

	LD	BC,(IX+%FFFFFFF6)
	PUSH	BC
	LD	BC,(IX+%FFFFFFF8)
	PUSH	BC
	LD	BC,16777215
	PUSH	BC
	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	(IY),A
	POP	BC
	POP	IY
	CALL	_plot
	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	A,(IY)
	POP	BC
	POP	IY
	POP	BC
	POP	BC
	POP	BC
;  121					
;  122							for(i=0;i<128;i++)	{
.LINE 122

	LD	BC,0
	LD	(IX+%FFFFFFFD),BC
	JR	L_48
L_46:
;  123								starX[i]=starRange-2*(rand()%starRange);
.LINE 123

	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	(IY),A
	POP	BC
	POP	IY
	CALL	_rand
	PUSH	IY
	PUSH	BC
	LD	IY,-1304
	LD	BC,IX
	ADD	IY,BC
	LD	A,(IY)
	POP	BC
	POP	IY
	LD	BC,2500
	CALL	__irems
	ADD	HL,HL
	LD	BC,-1267	; spill
	CALL	__istix
	LD	HL,(IX+%FFFFFFFD)
	LD	BC,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	DE,HL
	LD	HL,IX
	LD	BC,-1189
	ADD	HL,BC
	ADD	HL,DE
	LD	IY,HL
	LD	HL,2500
	OR	A,A
	LD	BC,-1267	; unspill
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	SBC	HL,BC
	LD	(IY),HL
	LD	BC,(IX+%FFFFFFFD)
	INC	BC
	LD	(IX+%FFFFFFFD),BC
;  124								}		
L_48:
.LINE 124

	LD	BC,128
	LD	HL,(IX+%FFFFFFFD)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_46
;  125							break;
.LINE 125

	JR	L_54
;  126					
;  127					case 0x20:
L_50:
.LINE 127

;  128							//puts("SPACE");												
;  129							x1 = 133;
.LINE 129

	LD	(IX+%FFFFFFF8),%85
	LD	(IX+%FFFFFFF9),%0
;  130							y1 = 133;
.LINE 130

	LD	(IX+%FFFFFFF6),%85
	LD	(IX+%FFFFFFF7),%0
;  131							vdp_cls();
.LINE 131

	CALL	_vdp_cls
;  132							break;
.LINE 132

	JR	L_54
;  133					case 0x1b:
L_51:
.LINE 133

;  134							puts("ESC - BYE");
.LINE 134

	LD	BC,L__14
	PUSH	BC
	CALL	_puts
	POP	BC
;  135							running = FALSE;
.LINE 135

	LD	(IX+%FFFFFFF2),%0
;  136						
;  137					default:
;  138							
;  139							break;
;  140					
;  141					
;  142				}
;  143		}
L_54:
.LINE 143

	LD	A,(IX+%FFFFFFF2)
	OR	A,A
	JR	NZ,L_55
;  144		vdp_cls();
.LINE 144

	CALL	_vdp_cls
;  145	
;  146		return 0;
.LINE 146

	OR	A,A
	SBC	HL,HL
;  147	}
.LINE 147

	LD	SP,IX
	POP	IX
	RET	


;**************************** _main ***************************
;Name                         Addr/Register   Size   Type
;_puts                               IMPORT  -----   function
;_getfullkeycode                     IMPORT  -----   function
;_vdp_fgcolour                       IMPORT  -----   function
;_vdp_cls                            IMPORT  -----   function
;_vdp_mode                           IMPORT  -----   function
;_rand                               IMPORT  -----   function
;starX                              IX-1189    384   variable
;starZ                               IX-805    384   variable
;starY                               IX-421    384   variable
;G_11                                 IX-37      3   variable
;key                                  IX-34      2   variable
;cz                                   IX-32      3   variable
;G_8                                  IX-29      3   variable
;G_9                                  IX-26      3   variable
;G_10                                 IX-23      3   variable
;cx                                   IX-20      3   variable
;cy                                   IX-17      3   variable
;running                              IX-14      1   variable
;G_0                                  IX-13      3   variable
;y1                                   IX-10      2   variable
;x1                                    IX-8      2   variable
;G_4                                   IX-6      3   variable
;i                                     IX-3      3   variable
;argv                                  IX+9      3   parameter
;argc                                  IX+6      3   parameter


; Stack Frame Size: 1316 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "main",147,"_main"
	SEGMENT STRSECT
L__14:
	DB	"ESC - BYE"
	DB	0
	XREF _vdp_plot:ROM
	XREF _getfullkeycode:ROM
	XREF _vdp_fgcolour:ROM
	XREF _vdp_cls:ROM
	XREF _vdp_mode:ROM
	XREF _rand:ROM
	XREF _puts:ROM
	XREF __idivs:ROM
	XREF __irems:ROM
	XREF __stoiu:ROM
	XREF __ildix:ROM
	XREF __istix:ROM
	XREF __setflag:ROM
	XREF __case8D:ROM
	XDEF _main
	XDEF _plot
	END
